//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UserInterface.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Data", Namespace="http://schemas.datacontract.org/2004/07/Poc2.domain")]
    [System.SerializableAttribute()]
    public partial class Data : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComTickField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserInterface.ServiceReference1.PartData[] CompositeDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsInitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] NameListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoftwareVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComTick {
            get {
                return this.ComTickField;
            }
            set {
                if ((this.ComTickField.Equals(value) != true)) {
                    this.ComTickField = value;
                    this.RaisePropertyChanged("ComTick");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserInterface.ServiceReference1.PartData[] CompositeData {
            get {
                return this.CompositeDataField;
            }
            set {
                if ((object.ReferenceEquals(this.CompositeDataField, value) != true)) {
                    this.CompositeDataField = value;
                    this.RaisePropertyChanged("CompositeData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] File {
            get {
                return this.FileField;
            }
            set {
                if ((object.ReferenceEquals(this.FileField, value) != true)) {
                    this.FileField = value;
                    this.RaisePropertyChanged("File");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInit {
            get {
                return this.IsInitField;
            }
            set {
                if ((this.IsInitField.Equals(value) != true)) {
                    this.IsInitField = value;
                    this.RaisePropertyChanged("IsInit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] NameList {
            get {
                return this.NameListField;
            }
            set {
                if ((object.ReferenceEquals(this.NameListField, value) != true)) {
                    this.NameListField = value;
                    this.RaisePropertyChanged("NameList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoftwareVersion {
            get {
                return this.SoftwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SoftwareVersionField, value) != true)) {
                    this.SoftwareVersionField = value;
                    this.RaisePropertyChanged("SoftwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartData", Namespace="http://schemas.datacontract.org/2004/07/Poc2.domain")]
    [System.SerializableAttribute()]
    public partial class PartData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan ProcTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Area {
            get {
                return this.AreaField;
            }
            set {
                if ((this.AreaField.Equals(value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan ProcTime {
            get {
                return this.ProcTimeField;
            }
            set {
                if ((this.ProcTimeField.Equals(value) != true)) {
                    this.ProcTimeField = value;
                    this.RaisePropertyChanged("ProcTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IPocServer", CallbackContract=typeof(UserInterface.ServiceReference1.IPocServerCallback))]
    public interface IPocServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPocServer/subscribe", ReplyAction="http://tempuri.org/IPocServer/subscribeResponse")]
        void subscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPocServer/subscribe", ReplyAction="http://tempuri.org/IPocServer/subscribeResponse")]
        System.Threading.Tasks.Task subscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPocServer/receiveMsg", ReplyAction="http://tempuri.org/IPocServer/receiveMsgResponse")]
        void receiveMsg(UserInterface.ServiceReference1.Data data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPocServer/receiveMsg", ReplyAction="http://tempuri.org/IPocServer/receiveMsgResponse")]
        System.Threading.Tasks.Task receiveMsgAsync(UserInterface.ServiceReference1.Data data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPocServer/getMsg", ReplyAction="http://tempuri.org/IPocServer/getMsgResponse")]
        UserInterface.ServiceReference1.Data getMsg();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPocServer/getMsg", ReplyAction="http://tempuri.org/IPocServer/getMsgResponse")]
        System.Threading.Tasks.Task<UserInterface.ServiceReference1.Data> getMsgAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPocServerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPocServer/OnCallback")]
        void OnCallback(UserInterface.ServiceReference1.Data data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPocServerChannel : UserInterface.ServiceReference1.IPocServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PocServerClient : System.ServiceModel.DuplexClientBase<UserInterface.ServiceReference1.IPocServer>, UserInterface.ServiceReference1.IPocServer {
        
        public PocServerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public PocServerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public PocServerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PocServerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PocServerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void subscribe() {
            base.Channel.subscribe();
        }
        
        public System.Threading.Tasks.Task subscribeAsync() {
            return base.Channel.subscribeAsync();
        }
        
        public void receiveMsg(UserInterface.ServiceReference1.Data data) {
            base.Channel.receiveMsg(data);
        }
        
        public System.Threading.Tasks.Task receiveMsgAsync(UserInterface.ServiceReference1.Data data) {
            return base.Channel.receiveMsgAsync(data);
        }
        
        public UserInterface.ServiceReference1.Data getMsg() {
            return base.Channel.getMsg();
        }
        
        public System.Threading.Tasks.Task<UserInterface.ServiceReference1.Data> getMsgAsync() {
            return base.Channel.getMsgAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IReceiver")]
    public interface IReceiver {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiver/send", ReplyAction="http://tempuri.org/IReceiver/sendResponse")]
        void send(UserInterface.ServiceReference1.Data data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiver/send", ReplyAction="http://tempuri.org/IReceiver/sendResponse")]
        System.Threading.Tasks.Task sendAsync(UserInterface.ServiceReference1.Data data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReceiverChannel : UserInterface.ServiceReference1.IReceiver, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReceiverClient : System.ServiceModel.ClientBase<UserInterface.ServiceReference1.IReceiver>, UserInterface.ServiceReference1.IReceiver {
        
        public ReceiverClient() {
        }
        
        public ReceiverClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReceiverClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReceiverClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReceiverClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void send(UserInterface.ServiceReference1.Data data) {
            base.Channel.send(data);
        }
        
        public System.Threading.Tasks.Task sendAsync(UserInterface.ServiceReference1.Data data) {
            return base.Channel.sendAsync(data);
        }
    }
}
