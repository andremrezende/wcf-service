//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PocClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IPocServer", CallbackContract=typeof(PocClient.ServiceReference1.IPocServerCallback))]
    public interface IPocServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPocServer/start", ReplyAction="http://tempuri.org/IPocServer/startResponse")]
        void start();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPocServer/start", ReplyAction="http://tempuri.org/IPocServer/startResponse")]
        System.Threading.Tasks.Task startAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPocServer/receiveMsg", ReplyAction="http://tempuri.org/IPocServer/receiveMsgResponse")]
        void receiveMsg(string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPocServer/receiveMsg", ReplyAction="http://tempuri.org/IPocServer/receiveMsgResponse")]
        System.Threading.Tasks.Task receiveMsgAsync(string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPocServer/getMsg", ReplyAction="http://tempuri.org/IPocServer/getMsgResponse")]
        string getMsg();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPocServer/getMsg", ReplyAction="http://tempuri.org/IPocServer/getMsgResponse")]
        System.Threading.Tasks.Task<string> getMsgAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPocServerCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPocServer/OnCallback", ReplyAction="http://tempuri.org/IPocServer/OnCallbackResponse")]
        void OnCallback(string msg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPocServerChannel : PocClient.ServiceReference1.IPocServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PocServerClient : System.ServiceModel.DuplexClientBase<PocClient.ServiceReference1.IPocServer>, PocClient.ServiceReference1.IPocServer {
        
        public PocServerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public PocServerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public PocServerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PocServerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PocServerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void start() {
            base.Channel.start();
        }
        
        public System.Threading.Tasks.Task startAsync() {
            return base.Channel.startAsync();
        }
        
        public void receiveMsg(string msg) {
            base.Channel.receiveMsg(msg);
        }
        
        public System.Threading.Tasks.Task receiveMsgAsync(string msg) {
            return base.Channel.receiveMsgAsync(msg);
        }
        
        public string getMsg() {
            return base.Channel.getMsg();
        }
        
        public System.Threading.Tasks.Task<string> getMsgAsync() {
            return base.Channel.getMsgAsync();
        }
    }
}
